'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateInput = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _containers = require('../../containers');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = require('../../utils.js');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DateInput = function (_React$Component) {
  _inherits(DateInput, _React$Component);

  function DateInput() {
    _classCallCheck(this, DateInput);

    return _possibleConstructorReturn(this, (DateInput.__proto__ || Object.getPrototypeOf(DateInput)).apply(this, arguments));
  }

  _createClass(DateInput, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          icon = _props.icon,
          dateFormat = _props.dateFormat,
          startMode = _props.startMode,
          popupPosition = _props.popupPosition,
          inline = _props.inline,
          value = _props.value;

      var onDateChange = function onDateChange(event, data) {
        if (data.value.format) {
          data.value = data.value.format(dateFormat);
        }
        _lodash2.default.invoke(_this2.props, 'onChange', event, _extends({}, _this2.props, { value: data.value }));
      };
      var rest = (0, _utils.getUnhandledProps)(DateInput, this.props);
      var inputElement = _react2.default.createElement(_semanticUiReact.Input, _extends({}, rest, {
        value: value,
        onChange: onDateChange,
        icon: icon }));

      if (inline) {
        return _react2.default.createElement(_containers.DatePicker, {
          dateFormat: dateFormat,
          startMode: startMode,
          onDateChange: onDateChange });
      }
      return _react2.default.createElement(
        _containers.CustomPopup,
        {
          position: popupPosition,
          trigger: inputElement },
        _react2.default.createElement(_containers.DatePicker, {
          initialValue: value,
          dateFormat: dateFormat,
          startMode: startMode,
          onDateChange: onDateChange })
      );
    }
  }]);

  return DateInput;
}(_react2.default.Component);

DateInput.handledProps = ['dateFormat', 'icon', 'inline', 'onChange', 'popupPosition', 'startMode', 'value'];


DateInput.propTypes = {
  /** Called on change.
   * @param {SyntheticEvent} event React's original SyntheticEvent.
   * @param {object} data All props and proposed value.
  */
  onChange: _propTypes2.default.func,
  /** Same as semantic-ui-react Input's ``icon`` prop. */
  icon: _propTypes2.default.any,
  /** Date formatting string.
   * Anything that that can be passed to ``moment().format``
   */
  dateFormat: _propTypes2.default.string,
  startMode: _propTypes2.default.oneOf(['year', 'month', 'day']),
  popupPosition: _propTypes2.default.oneOf(['top left', 'top right', 'bottom left', 'bottom right', 'right center', 'left center', 'top center', 'bottom center']),
  inline: _propTypes2.default.bool,
  value: _propTypes2.default.string
};

DateInput.defaultProps = {
  icon: 'calendar',
  dateFormat: 'DD-MM-YYYY',
  startMode: 'day',
  inline: false
};

exports.default = DateInput;
exports.DateInput = DateInput;